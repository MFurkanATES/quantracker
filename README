DIY Antenna Tracker using an STM32F4 discovery board.

Ground side tracker.
   Uses a Pololu style servo motor with encoder to give continuous Azimuth rotation
   Uses a standard RC Servo for elevation.
Airborne side 
   uses an OSD with telemetry via the video to send telemetry data to the tracker.
   or an Arduino ( basic option if you have a FrSky Telemetry RC system)

see my website http://www.zoomworks.org/fpv/antenna_tracker/index.html for more info about the project.

See the Changelog file in this directory for changes after 16/07/2013

Acknowledgments

      With Grateful Acknowledgements to the prior work, on the OSD code of:

        Sami Korbonen(Openpilot.org)
        taulabs ( taulabs.com) 
        brainFPV ( brainfpv.com)
        Thomas Oldbury (super-osd.com)
   
        Thanks to VEX Robotics for permission to use their step file of the VEX turntable

Dependencies

   The GNU gcc compiler. The source code is written in C++11, and requires gcc4.7 or higher
   to compile.
   available from 

         https://launchpad.net/gcc-arm-embedded

   The STM32F4 standard peripherals library
   available from

         http://www.st.com/st-web-ui/static/active/en/st_prod_software_internet/resource/technical/software/firmware/stm32f4_dsp_stdperiph_lib.zip
      
   My quan library 
   available from
         
         https://github.com/kwikius/quan-trunk

   FreeRTOS
   available from

         http://www.freertos.org/a00104.html

   MAVlink
   available from
 
        https://github.com/mavlink/mavlink

Once these are installed you will need to modify the paths in the Makefiles to suit your configuration.

-----

You will also need an airborne option to send the data to the tracker from the aircraft.

So far there are 2 airborne options

  1) Use the OSD airborne module which uses the Video link direct to send telemetry.
     This is currently in development but the design is all open source and in the repo.
     I hope to have a retail version soon.

  2) using an Arduino Pro Mini microcontroller and an FrSky Rx ( simple cheap)

     a) Use an Frsky Telemetry receiver and an Ardupilot to acquire the GPS data.
      The source code for this option can be downloaded from

         https://github.com/kwikius/mavlink_to_frsky

     b) Use a GPS module attached direct to the Arduino and sending data down the FrSky telemetry link
      The source code for this option is available at
         
         https://github.com/kwikius/quantracker_air

----

   There are various other applications associated with the project. 

      See https://github.com/kwikius?tab=repositories for more details 


      

      







